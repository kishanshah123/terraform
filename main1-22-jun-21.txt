
provider "aws" {
  region = "us-east-2"
}

resource "aws_instance" "test-ec2" {
  ami                    = "ami-01aab85a5e4a5a0fe"
  subnet_id              = aws_subnet.my-subnet.id
  key_name               = aws_key_pair.ec2-key.id
  instance_type          = "t2.micro"
  vpc_security_group_ids = ["${aws_security_group.my-sg.id}"]
  tags = {
    Name = "terraform-ec2"
  }
}

resource "aws_eip" "ip" {
  vpc      = true
  instance = aws_instance.test-ec2.id
}

resource "aws_security_group" "my-sg" {
  vpc_id = aws_vpc.my-vpc.id
  ingress {
    from_port   = 0
    to_port     = 0
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  tags = {
    Name = "ec2-sg"
  }
  provisioner "local-exec" {
    command = "echo 'Hi I am security group'"
  }

}

resource "aws_vpc" "my-vpc" {
  cidr_block = "192.168.1.0/24"
}


resource "aws_subnet" "my-subnet" {
  vpc_id                  = aws_vpc.my-vpc.id
  cidr_block              = "192.168.1.0/26"
  map_public_ip_on_launch = true
  tags = {
    Name = "ec2-subnet"
  }
}

resource "aws_internet_gateway" "my-igw" {
  vpc_id = aws_vpc.my-vpc.id
  tags = {
    Name = "ec2-igw"
  }
}

resource "aws_route_table" "my-rt" {
  vpc_id = aws_vpc.my-vpc.id

  route {
    //associated subnet can reach everywhere
    cidr_block = "0.0.0.0/0"
    //CRT uses this IGW to reach internet
    gateway_id = aws_internet_gateway.my-igw.id
  }

  tags = {
    Name = "ec2-public-crt"
  }
}

resource "aws_route_table_association" "ec2-crta-public-subnet-1" {
  subnet_id      = aws_subnet.my-subnet.id
  route_table_id = aws_route_table.my-rt.id
}

resource "aws_key_pair" "ec2-key" {
  key_name   = "ec2-key"
  public_key = file("./ec2-key.pub")
}