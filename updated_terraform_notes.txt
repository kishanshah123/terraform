---------------------------------------------------------------------------------------
Terraform:

Terraform is the infrastructure as code offering from HashiCorp. It is a tool for building, changing, 
and managing infrastructure in a safe, repeatable way. 


Terraform Command:
1.terraform init-->to first initilized the plugin
2.terraform validate-->to validate the syntex of main.tf files.
3.terraform fmt-->it check the extra spaces in tf files.
4.terraform plan--> it will show the dry run
5.terraform apply
6.terraform show-->
7.terraform apply --auto-approve
8.terraform destroy-->

--------------------------------------------------------------------------------------------------------
Variable & Function:

Map type:

variable "ami_id" {
  type = map
  default = {
    "us-east-1" = "ami-01aab85a5e4a5a0fe"
    "us-east-2" = "ami-01aab85a5e4a5a0fe"
  }
}

variable "us-regions" {

 type = map
 default = {

   "us-region-2" = "us-east-2"
 }
}

variable "instance_count" {
  default = "3"
}

variable "instance_tags" {
  type = "list"
  default = ["my-terraform-1", "my-terraform-2"]
}

How to call the ami in main.tf file:-------------------------------------------
ami = var.ami_id[var.my-region]

ami = lookup(var.ami_id, var.us-regions["us-region-2"])
lookup function is used to search the value form map kind type variable.


How to define tag on multiple instance:---------------------------------------------------------------
tags = {
    Name = "${element(var.instance_tags, count.index)}"
  }
element func is use to get the vaule form the list on the basis of index count.


How to print public ip of the the instance:-----------------------------------------------------------
provisioner "local-exec" {
  command = "echo '${aws_instance.terraform-example.*.public_ip}'"
 }


If we want to run commands on remote machine:----------------------------------------------------------
we have to create null resourse & inside it we have to define connection & remote-exec provisioner.

resource "null_resource" "cluster" {
 count = "${var.instance_count}"
 connection {

    host = element(aws_instance.terraform-example.*.public_ip, count.index)
    type = "ssh"
    user = "ec2-user"
    private_key = "${file("./kishan")}"
    timeout = "2m"
    agent = false
  }
  provisioner "remote-exec" {
    inline = [
        "sudo yum install httpd -y",
        "sudo systemctl start httpd",
        "sudo systemctl status httpd"
    ]
  }
  provisioner "local-exec" {
  command = "echo 'Hi I am null_resorce'"
 }
}


